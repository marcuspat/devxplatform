{
  "objective": "Build an enterprise-grade Developer Experience (DevEx) platform that makes every other internal developer portal look like amateur hour. STYLE: Modern dark theme UI with enterprise polish. CODE QUALITY: TypeScript strict mode, 90% test coverage, comprehensive error handling. EXAMPLES: Must include 5 diverse examples - REST API, GraphQL, gRPC, worker, webapp. CORE PLATFORM: Lightning-fast service generator supporting Node.js, Python, Go, Java, Rust. Service archetypes: REST API, GraphQL API, gRPC service, webapp, worker, cronjob, event-driven microservice. One-click generation from web UI or CLI with service ready to deploy in under 30 seconds. CODE GENERATION EXCELLENCE: Production boilerplate with 12-factor app principles baked in. Pre-configured observability: structured logging, distributed tracing, metrics. Security by default: auth middleware, rate limiting, CORS, helmet, input validation. Database patterns: connection pooling, migrations, seeders, repository pattern. Message queue integration: RabbitMQ, Kafka, Redis Pub/Sub templates. Built-in circuit breakers, retry logic, and graceful shutdown. 90% test coverage out of the box with unit, integration, and contract tests. INFRASTRUCTURE AS CODE: Kubernetes manifests that would make a CNCF engineer weep with joy. Smart resource limits based on service type and language. Auto-generated HPA, PDB, NetworkPolicies, service mesh configs. Multi-environment configs: dev, staging, prod with GitOps ready. Terraform modules for every AWS/GCP service a developer could want. Cost estimation BEFORE deployment with multiple optimization suggestions. CI/CD PIPELINES THAT SLAP: GitHub Actions and GitLab CI templates that actually cache properly. Parallel test execution, security scanning, container scanning. Progressive deployment strategies: canary, blue-green, feature flags. Automatic rollback on metric degradation. DEVELOPER PORTAL UI: Slick Next.js interface that makes developers WANT to use it. Service catalog with search, filters, and dependency visualization. Real-time cost tracking per service with budget alerts. Template marketplace where teams can share their patterns. One-click environment provisioning with automatic cleanup. CLI TOOL: Beautiful CLI with intuitive commands like 'devex create api user-service --auth jwt --db postgres'. Automatic authentication with the platform. Service status, logs, and metrics from terminal. THE KILLER FEATURES: AI-powered code review suggestions during generation. Automatic dependency updates with breaking change detection. Service health scoring based on best practices. Automated documentation from code comments. Integration with Slack/Discord for deployment notifications. MUST INCLUDE: Docker-compose.yml that runs the ENTIRE platform locally. Platform starts on http://localhost:3000 with seeded templates. CLI installable via npm install -g with working commands. 5 example services generated showing all capabilities. Comprehensive integration tests proving everything works. Health dashboard showing all platform components green. PostgreSQL for platform data, Redis for caching/queues. start.sh script that handles everything in one command. VALIDATION: Run './start.sh' and within 60 seconds can generate and deploy a new microservice via the UI. All example services must build, test, and run. No errors, no warnings, no half-ass implementations. This platform should make developers cry tears of joy.",
  "strategy": "auto",
  "mode": "centralized",
  "maxAgents": 10,
  "timeout": 60,
  "parallel": true,
  "monitor": true,
  "output": "./devex-platform-epic",
  "outputDir": "./reports",
  "timestamp": "2025-06-19T20:34:03.933Z",
  "id": "swarm-auto-centralized-1750365243940"
}